---
title: "W6-MultipleTesting"
format: html
editor: visual
---

```{r message=FALSE}
library(tidyverse) 
library(gt)
```

## MicroRNA

```{r}
load("microRNA_full.RData")
```

The `AD` vector has information about the presence or absence of Alzheimer's disease for each subject.

```{r}
str(AD)
head(AD)
table(AD)

disease_status = data.frame(AD) |>
  tibble::rownames_to_column("subject")
str(disease_status)
```

The `microRNA_Data` data frame has the measurements for each subject (in columns) for each microRNA (in the rows).

```{r}
microRNA_Data[1:4, 1:3]
```

Reshape and merge teh data so we can use it.

```{r}
mirna = microRNA_Data |> 
  tibble::rownames_to_column("microRNA") |> 
  tidyr::pivot_longer(cols = -1, names_to = "subject", values_to = "value") |> 
  dplyr::left_join(disease_status, by = "subject")
head(mirna, n = 4) 
```

Visualise the measurements for the first 10 microRNA using side-by-side boxplots.

```{r}
mirna |> 
  group_by(microRNA) |>
  nest() |> 
  ungroup() |> 
  slice(1:10) # extract first 10 groups
  unnest(cols = everything()) |> 
    ggplot() + 
    aes(y = reorder(microRNA, value), 
        x = value, colour = factor(AD)) + 
    geom_boxplot(coef = 10) + 
    scale_color_brewer(palette = "Set1") + 
    theme(legend.position = "tap")
    labs(colour = "Disease status", 
         y = "MicroRNA")
```

```{r}
mirna_rest = mirna |> 
  group_by(microRNA) |>
  summarise(pval = t.test(value ~ AD)$p.value) 
```

```{r}
mirna_res |> ggplot() + aes(x = pval) + 
  geom_histogram(boundary = 0, 
                 binwidth = 0.05, 
                 fill = "skyblue", 
                 colour = "black")
```

How many p-values are "significant" at a 5% level of significance?

```{r}
sum(mirna_res$pval < 0.05) 
```

```{r}
mirna_res = mirna_res |> 
  mutate(
    p_bonf = p.adjust(pval, method = "bonferroni"), 
    p_bh = p.adjust(pval, method = "BH")
  )
mirna_res |> 
  summarise(original_n_sig = sum(pval < 0.05), 
            bonf_n_sig = sum(p_bonf < 0.05), 
            bh_n_sig = sum(p_bh < 0.05))
```

```{r}
mirna_res |> arrange(pval) |> 
  select(`Original p-value` = pval, 
         `Bonferroni p-value` = p_bonf, `BH p-value` = p_bh) |> 
  head(n = 10) |> 
  gt() |> fmt_scientific(columns = 1:3) |> 
  tab_style(
    style = list(
      cell_fill(color = "#F9E3D6"),
      cell_text(style = "italic")), 
    locations = list(
      cells_body(columns = `Original p-value`,
                 rows = `Original p-value` < 0.05), 
      cells_body(columns = `Bonferroni p-value` < 0.05), 
      cells_body(columns = `BH p-value`, rows = `BH p-value` < 0.05)
    )
    )
```

### Case 1: no differences

The code below generates data from normal distributions where the means of the two samples are equal to each other. We do this 1000 times. Ideally we would never reject the null hypothesis: $H_0:\mu_1 = \mu_2$

```{r}
set.seed(1234) 
B = 1000
p_vals = rep(NA, B)
case1 = tibble(experiment = 1:B) |> 
  group_by(experiment) |> 
  summarise(x_sample = rnorm(20), 
            y_sample = rnorm(20)) |> 
  nest() |> 
  mutate(
    test = map(data, 
               ~t.test(.$x_sample, 
                       .$y_sample, 
                       var.equal = TRUE) |> 
                 broom::tidy())) |> 
  unnest(test) |>
  ungroup()
```

However, if we don't correct for multiple, we (incorrectly) make the decision to reject the null hypothesis about 5% of the time.

```{r}
sum(case1$p.value < 0.05) 
mean(case1$p.value < 0.05) 
```

The distribution of p-values is shown below.

```{r}
case1 |> ggplot() + aes(x = p.value) + 
  geom_histogram(boundary = 0, binwidth = 0.05, 
                 fill = "midnightblue", colour = "black")
```

After correcting for multiple testing we get the following results:

```{r}
case1 = case1 |> 
  mutate(
    p_bonf = p.adjust(p.value, method = "bonferroni"), 
    p_bh = p.adjust(p.value, method = "BH")
  )
case1 |> ungroup() |>
  summarise(
    original = mean(p.value < 0.05), 
    bonferroni = mean(p_bonf < 0.05), 
    bh = mean(p_bh < 0.05)
  )
```

#### Case 1: Half of our samples have truly significant differences

```{r}
set.seed(1234) 
case2 = tibble(experiment = 1:B) |> 
  group_by(experiment) |> 
  summarise(x_sample = rnorm(20), y_sample = rnorm(20)) |> 
  rowwise() |> 
  mutate(truth = if_else(experiment<=B/2, "mu1 - mu2 = 0", "mu1 - mu2 = 2"),
         y_sample = if_else(truth == "mu1 - mu2 = 2", y_sample + 2, y_sample)) |> 
  ungroup() |> 
  nest(data = c(x_sample, y_sample)) |> 
  mutate(test = map(data, ~t.test(.$x_sample, .$y_sample, var.equal = TRUE) |> 
                      broom::tidy())) |> 
  unnest(test) |> ungroup() |> 
  mutate(
    prediction = if_else(p.value < 0.05, "reject H0", "don't reject H0"), 
    p_bonf = p.adjust(p.value, method = "bonferroni"), 
    p_bh = p.adjust(p.value, method = "BH"), 
    pred_bonf = if_else(p_bonf < 0.05, "reject H0", "don't reject H0"), 
    pred_bh = if_else(p_bh < 0.05, "reject H0", "don't reject H0"))

```

```{r}
# no adjustment
case2 |> janitor::tabyl(prediction, truth) 
# Bonferroni: controls FWER
case2 |> janitor::tabyl(pred_bonf, truth) 
# BH: controls FDR
case2 |> janitor::tabyl(pred_bh, truth) 
```

```{r}
pval2 = case2 |> select(experiment, p.value, p_bonf, p_bh) |> 
  pivot_longer(cols = c(p.value, p_bonf, p_bh), 
               names_to = "method", 
               values_to = "p_value") |> 
  mutate(method = recode(method, 
                         "p.value" = "Original", 
                         "p_bh" = "BH", 
                         "p_bonf" = "Bonferroni"))
pval2 |> ggplot() + 
  aes(x = p_value, fill = method) + 
  geom_histogram(boundary = 0, binwidth = 0.05, colour = "black") + 
  facet_grid(~method) + 
  scale_fill_brewer(palette = "Set1") + 
  scale_x_continuous(breaks = c(0, 1)) + 
  theme(legend.position = "none")
```
